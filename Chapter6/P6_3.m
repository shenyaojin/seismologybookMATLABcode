%P6_3.m
clf;
v10=2;v20=3;H1=4;  %速度从地表2km/s到4km深度处的3km/s，层厚为4km,每km速度增加0.25km/s
b1=(v20-v10)/H1;   %该层的速度梯度
v11=v20;v21=1.5;H2=3;  %速度从3km/s减到1.5km/s的速度变化层，层厚为3km
b2=(v21-v11)/H2;    %该层的速度梯度
v12=v21;v22=4.5;H3=12;  %速度从1.5km/s到4.5km/s的速度变化层，层厚为12km
b3=(v22-v12)/H3; %该层的速度梯度
x=[0,60];     %震中距范围
v=[];
for z=0:19
if(z<=H1)
    v=[v;ones(1,2)*v10+b1*z];  %根据震中距的2个等份结点构建第一层速度
elseif(z>H1&z<=(H2+H1))
    v=[v;ones(1,2)*(v11+b2*(z-H1))]; %根据震中距的2个等份结点构建第二层速度
elseif(z>(H2+H1)&z<=(H1+H2+H3))
    v=[v;ones(1,2)*(v21+b3*(z-(H1+H2)))]; %根据震中距的2个等份结点构建第三层速度
end
end
pcolor(x,[0:19],v);   %绘制速度结构
shading interp%将速度图像平滑
colorbar    %加上色标
annotation('textbox',[0.80,0.894,0.5,0.1],'linestyle','none','String','速度/km.s^-^1') 
%在色标上加上标记
hold on%图形保持，使得后面的绘图在此基础上
h=0.1;    %以厚度0.1km进行计算
for p=0.5:-0.01:0.25  
%对p参数循环计算，大的p参数穿透地壳深度小，震中距较小
xall=0;zall=0;
%总的震中距和深度，从初始的零开始累加
dx=zeros(1,300); %所有层的震中距，初始设置为零
for ii=1:300   %对每一层分别进行循环计算
    z=ii*h;   %层的深度
if(z<=H1)  %对不同的速度层，按照要求设置层顶部和底部的慢度
        u1=1/(v10+b1*(z-h)); %顶部慢度
        u2=1/(v10+b1*z);   %底部慢度
elseif(z>H1&z<=(H2+H1))
        u1=1/(v11+b2*(z-(H1+h))); %顶部慢度
u2=1/(v11+b2*(z-H1));   %底部慢度
elseif(z>(H2+H1)&z<=(H1+H2+H3))
        u1=1/(v21+b3*(z-(h+H1+H2))); %顶部慢度
        u2=1/(v21+b3*(z-(H1+H2))); %底部慢度
end
if(p>=u1)break;end
[dx(ii),dt,irtr]=layertx(p,h,u1,u2);
%调用layertx函数，每个参数得到走时和震中距。这里将每层震中距增量存盘，以便在计算对称的射线折返上升时用
    plot([xall,xall+dx(ii)],[z-h z],'w'); %采用白色绘制每层中的射线路径
    xall=xall+dx(ii); %下一层的震中距开始为上一层震中距的结束
end%一直到达最深层
for jj=ii-1:-1:1   %将原来计算的震中距用在对称的折返路径上
    z=jj*h; %深度计算
    plot([xall,xall+dx(jj)],[z z-h],'w');  %用白色绘制每层中的射线路径
    xall=xall+dx(jj); %下一层的震中距开始为上一层震中距的结束
end%计算到达地表
end%一根射线计算结束
set(gca,'Ydir','reverse','box','on') %使得y轴方向并在四周加上框
%将当前绘图的y轴方向反向，使得符合深度大在下部的情况，并且将右边和上边均加上框
axis([0,60,0,18])  %设置绘图x轴的范围为0~60，y轴的绘图范围为0~15
text(25,0,'影区')
xlabel('震中距/km')   %加x轴的标记
ylabel('深度/km')    %加y轴的标记
